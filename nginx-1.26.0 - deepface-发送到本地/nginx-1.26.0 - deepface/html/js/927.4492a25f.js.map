{"version":3,"file":"js/927.4492a25f.js","mappings":"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","sources":["webpack://deepface-front/./src/views/RegisterView.vue","webpack://deepface-front/src/views/RegisterView.vue","webpack://deepface-front/./src/views/RegisterView.vue?1e62","webpack://deepface-front/./src/views/RegisterView.vue?4f51"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"registerBody\"},[_c('el-form',{ref:\"registerForm\",staticClass:\"register-box\",attrs:{\"model\":_vm.registerForm,\"width\":\" 80px\"}},[_c('h3',{staticClass:\"register-title\"},[_vm._v(\"账号注册\")]),_c('el-form-item',{attrs:{\"label\":\"账号\",\"prop\":\"username\",\"rules\":_vm.rules.username}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\" 请输入用户名\"},on:{\"blur\":function($event){return _vm.validate('username')}},model:{value:(_vm.registerForm.username),callback:function ($$v) {_vm.$set(_vm.registerForm, \"username\", $$v)},expression:\"registerForm.username\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\",\"rules\":_vm.rules.password}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\" 请输入密码\"},on:{\"blur\":function($event){return _vm.validate('password')}},model:{value:(_vm.registerForm.password),callback:function ($$v) {_vm.$set(_vm.registerForm, \"password\", $$v)},expression:\"registerForm.password\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"姓名\",\"prop\":\"name\",\"rules\":_vm.rules.name}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\" 请输入姓名\"},on:{\"blur\":function($event){return _vm.validate('name')}},model:{value:(_vm.registerForm.name),callback:function ($$v) {_vm.$set(_vm.registerForm, \"name\", $$v)},expression:\"registerForm.name\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"邮件\",\"prop\":\"email\",\"rules\":_vm.rules.email}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\" 请输入邮箱\"},on:{\"blur\":function($event){return _vm.validate('email')}},model:{value:(_vm.registerForm.email),callback:function ($$v) {_vm.$set(_vm.registerForm, \"email\", $$v)},expression:\"registerForm.email\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"验证码\",\"prop\":\"vCode\",\"rules\":_vm.rules.vCode}},[_c('el-col',{attrs:{\"span\":10}},[_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\" 请输入验证码\",\"size\":\"small\"},on:{\"blur\":function($event){return _vm.validate('vCode')}},model:{value:(_vm.registerForm.vCode),callback:function ($$v) {_vm.$set(_vm.registerForm, \"vCode\", $$v)},expression:\"registerForm.vCode\"}})],1),_c('el-col',{attrs:{\"span\":8}},[_c('el-image',{attrs:{\"src\":_vm.vCodePic,\"fit\":_vm.fit},on:{\"click\":function($event){return _vm.loadVCode()}}})],1)],1),_c('el-form-item',[_c('div',{staticClass:\"container\"},[_c('el-button',{staticClass:\"left\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.goLogin()}}},[_vm._v(\"返回登录\")]),_c('el-button',{staticClass:\"right\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.goRegister()}}},[_vm._v(\"确认注册\")])],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"registerBody\">\r\n        <el-form ref=\"registerForm\" :model=\"registerForm\" width=\" 80px\" class=\"register-box\">\r\n\r\n            <h3 class=\"register-title\">账号注册</h3>\r\n\r\n            <el-form-item label=\"账号\" prop=\"username\" :rules=\"rules.username\">\r\n                <el-col :span=\"20\">\r\n                    <el-input type=\"text\" placeholder=\" 请输入用户名\" v-model=\"registerForm.username\"\r\n                        @blur=\"validate('username')\" />\r\n                </el-col>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"密码\" prop=\"password\" :rules=\"rules.password\">\r\n                <el-col :span=\"20\">\r\n                    <el-input type=\"password\" placeholder=\" 请输入密码\" v-model=\"registerForm.password\"\r\n                        @blur=\"validate('password')\" />\r\n                </el-col>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"姓名\" prop=\"name\" :rules=\"rules.name\">\r\n                <el-col :span=\"20\">\r\n                    <el-input type=\"text\" placeholder=\" 请输入姓名\" v-model=\"registerForm.name\" @blur=\"validate('name')\" />\r\n                </el-col>\r\n            </el-form-item>\r\n            <el-form-item label=\"邮件\" prop=\"email\" :rules=\"rules.email\">\r\n                <el-col :span=\"20\">\r\n                    <el-input type=\"text\" placeholder=\" 请输入邮箱\" v-model=\"registerForm.email\" @blur=\"validate('email')\" />\r\n                </el-col>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"验证码\" prop=\"vCode\" :rules=\"rules.vCode\">\r\n                <el-col :span=\"10\">\r\n                    <el-input type=\"text\" placeholder=\" 请输入验证码\" v-model=\"registerForm.vCode\" @blur=\"validate('vCode')\"\r\n                        size=\"small\" />\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                    <el-image :src=\"vCodePic\" :fit=\"fit\" @click=\"loadVCode()\"></el-image>\r\n                </el-col>\r\n\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n                <div class=\"container\">\r\n                    <el-button class=\"left\" type=\"primary\" @click=\"goLogin()\">返回登录</el-button>\r\n                    <el-button class=\"right\" type=\"primary\" @click=\"goRegister()\">确认注册</el-button>\r\n                </div>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport service from '@/utils/request';\r\n//import axios from \"axios\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            registerForm: {\r\n                id: 0,\r\n                username: \"\",\r\n                password: \"\",\r\n                name: \"\",\r\n                email: \"\",\r\n                vCode: \"\"\r\n            },\r\n            // vCodePic: require(\"../assets/vCodePic.png\"),\r\n\r\n            flag: 0,//判断注册是否成功，默认失败(0)\r\n            uuid: \"\",\r\n            /////////////////////////////////////\r\n            rules: {\r\n                username: [{ validator: this.checkUsername, trigger: \"blur\" }],\r\n                password: [{ validator: this.checkPassword, trigger: \"blur\" }],\r\n                name: [{ validator: this.checkName, trigger: \"blur\" }],\r\n                email: [{ validator: this.checkEmail, trigger: \"blur\" }],\r\n                vCode: [{ validator: this.checkVCode, trigger: \"blur\" }],\r\n            },\r\n        };\r\n    },\r\n    mounted() {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            service.defaults.headers.common['token'] = token;\r\n            this.getUuid(); // 加载验证码\r\n        }\r\n       \r\n    },\r\n    methods: {\r\n        getUuid() {\r\n            service.get(\"/login/uuid\").then((result) => {\r\n                if (result.data.code == 1) {\r\n                    this.uuid = result.data.data;\r\n                    this.loadVCode();\r\n                }else{\r\n                    alert(result.data.msg)\r\n                }\r\n            })\r\n        },\r\n        \r\n        loadVCode() {\r\n            service.get('/vCode', {\r\n                params: { length: 4 }, // 如果需要传递参数\r\n                responseType: 'blob', // 设置响应类型为 blob，用于接收图片\r\n                headers: {\r\n                    \"Uuid\": this.uuid,\r\n                }\r\n            })\r\n                .then(response => {\r\n                    // 将 blob 数据转换为 URL 并赋值给 vCodePic\r\n                    this.vCodePic = URL.createObjectURL(new Blob([response.data], { type: response.headers['content-type'] }));\r\n                })\r\n                .catch(error => {\r\n                    console.error('获取验证码失败：', error);\r\n                });\r\n        },\r\n        goRegister() {\r\n            this.$refs.registerForm.validate((valid) => {\r\n                if (valid) {\r\n                    service\r\n                        .post(\"/login/register\", this.registerForm, {\r\n                            headers: {\r\n                                \"Uuid\": this.uuid,\r\n                            }\r\n                        })\r\n                        .then((result) => {\r\n                            this.flag = result.data.code\r\n                            if (this.flag == 1) {\r\n                                alert(\"注册成功\")\r\n                                this.$router.push(\"login\");\r\n                            }\r\n                            else {\r\n                                alert(\"注册失败\"+result.data.msg)\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    alert(\"注册失败\");\r\n                    return;\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n        goLogin() {\r\n            this.$router.push(\"login\");\r\n        },\r\n        //////////////////////////////////////\r\n        checkUsername(rule, value, callback) {\r\n            if (value == \"\") {\r\n                return callback(new Error(\"账号不能为空\"));\r\n            } else callback();\r\n        },\r\n        checkName(rule, value, callback) {\r\n            if (value == \"\") {\r\n                return callback(new Error(\"姓名不能为空\"));\r\n            } else callback();\r\n        },\r\n        checkPassword(rule, value, callback) {\r\n            if (value == \"\") {\r\n                callback(new Error(\"请输入密码\"));\r\n            } else {\r\n                setTimeout(() => {\r\n                    if (value.length < 3) {\r\n                        callback(new Error(\"密码长度必须大于3\"));\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                }, 500);\r\n            }\r\n        },\r\n        checkEmail(rule, value, callback) {\r\n            if (value === \"\") {\r\n                callback(new Error(\"邮箱不能为空\"));\r\n            } else {\r\n                // 定义邮箱的正则表达式\r\n                const emailRegex = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\r\n                setTimeout(() => {\r\n                    if (!emailRegex.test(value)) {\r\n                        callback(new Error(\"邮箱格式不正确\"));\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                }, 500);\r\n            }\r\n        },\r\n        checkVCode(rule, value, callback) {\r\n            if (value == \"\") {\r\n                return callback(new Error(\"验证码不能为空\"));\r\n            } else callback();\r\n        },\r\n        ///////////////////////////////////////////\r\n\r\n        validate(prop) {\r\n            this.$refs.registerForm.validateField(prop);\r\n        },\r\n\r\n        //////////////////////////////////////////\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.register-box {\r\n    border: 1px solid #dcdfe6;\r\n    width: 350px;\r\n    margin: 50px auto;\r\n    padding: 35px 35px 15px 35px;\r\n    border-radius: 5px;\r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    box-shadow: 0 0 25px #909399;\r\n    background-color: white;\r\n}\r\n\r\n.register-title {\r\n    text-align: center;\r\n    margin: 0 auto 40px auto;\r\n    color: #303133;\r\n}\r\n\r\n.registerBody {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-width: 1000px;\r\n    background-image: url(\"../assets/SummerAmbience.png\");\r\n    background-color: #606266;\r\n    background-size: 100% 100%;\r\n    background-position: center center;\r\n    overflow: auto;\r\n    background-repeat: no-repeat;\r\n    position: fixed;\r\n    line-height: 100%;\r\n    padding-top: 150px;\r\n}\r\n\r\n.left {\r\n    align-items: center\r\n}\r\n\r\n.right {\r\n    align-items: center\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RegisterView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RegisterView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./RegisterView.vue?vue&type=template&id=351e8bd5\"\nimport script from \"./RegisterView.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&lang=js\"\nimport style0 from \"./RegisterView.vue?vue&type=style&index=0&id=351e8bd5&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","registerForm","_v","rules","username","on","$event","validate","model","value","callback","$$v","$set","expression","password","name","email","vCode","vCodePic","fit","loadVCode","goLogin","goRegister","staticRenderFns","data","id","flag","uuid","validator","checkUsername","trigger","checkPassword","checkName","checkEmail","checkVCode","mounted","token","localStorage","getItem","service","defaults","headers","common","getUuid","methods","get","then","result","code","alert","msg","params","length","responseType","response","URL","createObjectURL","Blob","type","catch","error","console","$refs","valid","post","$router","push","rule","Error","setTimeout","emailRegex","test","prop","validateField","component"],"sourceRoot":""}